From: Simon McVittie <smcv@debian.org>
Date: Tue, 24 Aug 2021 21:47:59 +0100
Subject: datetime: Restore compatibility with libgweather 3.36

This avoids entangling core GNOME components with the transition from
libgweather 3.36 to libgweather 40. gnome-settings-daemon doesn't use
the parts of libgweather that changed behaviour.

Forwarded: not-needed, Debian-specific transitional code
---
 meson.build                   |  2 +-
 plugins/datetime/weather-tz.c | 26 ++++++++++++++++++++++++++
 2 files changed, 27 insertions(+), 1 deletion(-)

diff --git a/meson.build b/meson.build
index b6639d9..a17824d 100644
--- a/meson.build
+++ b/meson.build
@@ -96,7 +96,7 @@ gnome_desktop_dep = dependency('gnome-desktop-3.0', version: '>= 3.37.1')
 gsettings_desktop_dep = dependency('gsettings-desktop-schemas', version: '>= 40')
 gtk_dep = dependency('gtk+-3.0', version: '>= 3.15.3')
 gtk_x11_dep = dependency('gtk+-x11-3.0')
-gweather_dep = dependency('gweather-3.0', version: '>= 40.alpha')
+gweather_dep = dependency('gweather-3.0', version: '>= 3.36')
 lcms_dep = dependency('lcms2', version: '>= 2.2')
 libcanberra_gtk_dep = dependency('libcanberra-gtk3')
 libgeoclue_dep = dependency('libgeoclue-2.0', version: '>= 2.3.1')
diff --git a/plugins/datetime/weather-tz.c b/plugins/datetime/weather-tz.c
index 2eac90a..be6e859 100644
--- a/plugins/datetime/weather-tz.c
+++ b/plugins/datetime/weather-tz.c
@@ -29,6 +29,7 @@ static GList *
 location_get_cities (GWeatherLocation *parent_location)
 {
         GList *cities = NULL;
+#if GWEATHER_CHECK_VERSION(40, 0, 0)
         GWeatherLocation *child = NULL;
 
         while ((child = gweather_location_next_child (parent_location, child))) {
@@ -39,6 +40,21 @@ location_get_cities (GWeatherLocation *parent_location)
                                                 location_get_cities (child));
                 }
         }
+#else
+        GWeatherLocation **children;
+        gint i;
+
+        children = gweather_location_get_children (parent_location);
+        for (i = 0; children[i]; i++) {
+                if (gweather_location_get_level (children[i]) == GWEATHER_LOCATION_CITY) {
+                        cities = g_list_prepend (cities,
+                                                 children[i]);
+                } else {
+                        cities = g_list_concat (cities,
+                                                location_get_cities (children[i]));
+                 }
+         }
+#endif
 
         return cities;
 }
@@ -98,9 +114,15 @@ load_timezones (GList *cities)
 GList *
 weather_tz_db_get_locations (const gchar *country_code)
 {
+#if GWEATHER_CHECK_VERSION(40, 0, 0)
         g_autoptr(GWeatherLocation) world = NULL;
         g_autoptr(GWeatherLocation) country = NULL;
         g_autolist(GWeatherLocation) cities = NULL;
+#else
+        GList *cities;
+        GWeatherLocation *world;
+        GWeatherLocation *country;
+#endif
         GList *tz_locations;
 
         world = gweather_location_get_world ();
@@ -113,5 +135,9 @@ weather_tz_db_get_locations (const gchar *country_code)
         cities = location_get_cities (country);
         tz_locations = load_timezones (cities);
 
+#if !GWEATHER_CHECK_VERSION(40, 0, 0)
+        g_list_free (cities);
+#endif
+
         return tz_locations;
 }
